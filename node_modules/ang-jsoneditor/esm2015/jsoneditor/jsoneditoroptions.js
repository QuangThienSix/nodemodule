export class JsonEditorOptions {
    constructor() {
        this.enableSort = true;
        this.enableTransform = true;
        this.escapeUnicode = false;
        this.expandAll = false;
        this.sortObjectKeys = false;
        this.history = true;
        this.mode = 'tree';
        this.search = true;
        this.indentation = 2;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbmVkaXRvcm9wdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmctanNvbmVkaXRvci8iLCJzb3VyY2VzIjpbImpzb25lZGl0b3IvanNvbmVkaXRvcm9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBY0EsTUFBTSxPQUFPLGlCQUFpQjtJQTBJNUI7UUFDRSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUM1QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCB0eXBlIEpzb25FZGl0b3JNb2RlID0gJ3RyZWUnIHwgJ3ZpZXcnIHwgJ2Zvcm0nIHwgJ2NvZGUnIHwgJ3RleHQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEpzb25FZGl0b3JUcmVlTm9kZSB7XG4gIGZpZWxkOiBTdHJpbmcsXG4gIHZhbHVlOiBTdHJpbmcsXG4gIHBhdGg6IFN0cmluZ1tdXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUVycm9yIHtcbiAgcGF0aDogKHN0cmluZyB8IG51bWJlcilbXTtcbiAgbWVzc2FnZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgSnNvbkVkaXRvck9wdGlvbnMge1xuICBwdWJsaWMgYWNlOiBhbnk7XG4gIHB1YmxpYyBhanY6IE9iamVjdDtcblxuXG4gIC8qKlxuICAgKiAgIHtmdW5jdGlvbn0gb25DaGFuZ2UgIENhbGxiYWNrIG1ldGhvZCwgdHJpZ2dlcmVkXG4gIG9uIGNoYW5nZSBvZiBjb250ZW50cy5cbiAgRG9lcyBub3QgcGFzcyB0aGUgY29udGVudHMgaXRzZWxmLlxuICBTZWUgYWxzbyBgb25DaGFuZ2VKU09OYCBhbmRcbiAgYG9uQ2hhbmdlVGV4dGAuXG4gICAqL1xuICBwdWJsaWMgb25DaGFuZ2U6ICgpID0+IHZvaWQ7XG5cbiAgLyoqXG4qICAgLy8ge2Z1bmN0aW9ufSBvbkNoYW5nZUpTT04gIENhbGxiYWNrIG1ldGhvZCwgdHJpZ2dlcmVkXG4vLyAgICAgaW4gbW9kZXMgb24gY2hhbmdlIG9mIGNvbnRlbnRzLFxuLy8gICAgIHBhc3NpbmcgdGhlIGNoYW5nZWQgY29udGVudHNcbi8vICAgICBhcyBKU09OLlxuLy8gICAgIE9ubHkgYXBwbGljYWJsZSBmb3IgbW9kZXNcbi8vICAgICAndHJlZScsICd2aWV3JywgYW5kICdmb3JtJy5cbiovXG4gIHB1YmxpYyBvbkNoYW5nZUpTT046ICgpID0+IHZvaWQ7XG5cblxuICBwdWJsaWMgb25Ob2RlTmFtZTogKCkgPT4gdm9pZDtcbiAgcHVibGljIG9uQ3JlYXRlTWVudTogKCkgPT4gdm9pZDtcbiAgcHVibGljIG9uQ29sb3JQaWNrZXI6ICgpID0+IHZvaWQ7XG5cbiAgLyoqXG4qICAgLy8ge2Z1bmN0aW9ufSBvbkNoYW5nZVRleHQgIENhbGxiYWNrIG1ldGhvZCwgdHJpZ2dlcmVkXG4vLyAgICAgaW4gbW9kZXMgb24gY2hhbmdlIG9mIGNvbnRlbnRzLFxuLy8gICAgIHBhc3NpbmcgdGhlIGNoYW5nZWQgY29udGVudHNcbi8vICAgICBhcyBzdHJpbmdpZmllZCBKU09OLlxuKi9cbiAgcHVibGljIG9uQ2hhbmdlVGV4dDogKGpzb25zdHI6c3RyaW5nKSA9PiB2b2lkO1xuXG5cbiAgLyoqXG4gICAqICAge2Z1bmN0aW9ufSBvblNlbGVjdGlvbkNoYW5nZSBDYWxsYmFjayBtZXRob2QsXG4gIHRyaWdnZXJlZCBvbiBub2RlIHNlbGVjdGlvbiBjaGFuZ2VcbiAgT25seSBhcHBsaWNhYmxlIGZvciBtb2Rlc1xuICAndHJlZScsICd2aWV3JywgYW5kICdmb3JtJ1xuICAgKi9cbiAgcHVibGljIG9uU2VsZWN0aW9uQ2hhbmdlOiAoKSA9PiB2b2lkO1xuXG4gIC8qKlxuKiAgICAge2Z1bmN0aW9ufSBvblRleHRTZWxlY3Rpb25DaGFuZ2UgQ2FsbGJhY2sgbWV0aG9kLFxuICB0cmlnZ2VyZWQgb24gdGV4dCBzZWxlY3Rpb24gY2hhbmdlXG4gIE9ubHkgYXBwbGljYWJsZSBmb3IgbW9kZXNcbiovXG4gIHB1YmxpYyBvblRleHRTZWxlY3Rpb25DaGFuZ2U6ICgpID0+IHZvaWQ7XG5cblxuICAvKipcbiAgICogICAvLyB7ZnVuY3Rpb259IG9uRXZlbnQgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbiAgICAvLyB3aGVuIGFuIGV2ZW50IG9jY3VycyBpblxuICAgIC8vIGEgSlNPTiBmaWVsZCBvciB2YWx1ZS5cbiAgICAvLyBPbmx5IGFwcGxpY2FibGUgZm9yXG4gICAgLy8gbW9kZXMgJ2Zvcm0nLCAndHJlZScgYW5kXG4gICAgLy8gJ3ZpZXcnXG4gICAqL1xuICBwdWJsaWMgb25FdmVudDogKCkgPT4gdm9pZDtcblxuICAvKipcbiogLy8gKiAgIHtmdW5jdGlvbn0gb25Gb2N1cyAgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbi8vICB3aGVuIHRoZSBlZGl0b3IgY29tZXMgaW50byBmb2N1cyxcbi8vICBwYXNzaW5nIGFuIG9iamVjdCB7dHlwZSwgdGFyZ2V0fSxcbi8vICBBcHBsaWNhYmxlIGZvciBhbGwgbW9kZXNcbiovXG4gIHB1YmxpYyBvbkZvY3VzOiAoKSA9PiB2b2lkO1xuXG4gIC8vICogICB7ZnVuY3Rpb259IG9uQmx1ciAgIENhbGxiYWNrIG1ldGhvZCwgdHJpZ2dlcmVkXG4gIC8vICB3aGVuIHRoZSBlZGl0b3IgZ29lcyBvdXQgb2YgZm9jdXMsXG4gIC8vICBwYXNzaW5nIGFuIG9iamVjdCB7dHlwZSwgdGFyZ2V0fSxcbiAgLy8gIEFwcGxpY2FibGUgZm9yIGFsbCBtb2Rlc1xuICBwdWJsaWMgb25CbHVyOiAoKSA9PiB2b2lkO1xuXG4gIC8qKlxuKiAgLy8gKiAgIHtmdW5jdGlvbn0gb25DbGFzc05hbWUgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbi8vIHdoZW4gYSBOb2RlIERPTSBpcyByZW5kZXJlZC4gRnVuY3Rpb24gcmV0dXJuc1xuLy8gYSBjc3MgY2xhc3MgbmFtZSB0byBiZSBzZXQgb24gYSBub2RlLlxuLy8gT25seSBhcHBsaWNhYmxlIGZvclxuLy8gbW9kZXMgJ2Zvcm0nLCAndHJlZScgYW5kXG4vLyAndmlldydcbiovXG4gIHB1YmxpYyBvbkNsYXNzTmFtZTogKCkgPT4gdm9pZDtcblxuICBwdWJsaWMgb25FZGl0YWJsZTogKG5vZGU6IEpzb25FZGl0b3JUcmVlTm9kZSB8IHt9KSA9PiBib29sZWFuIHwgeyBmaWVsZDogYm9vbGVhbiwgdmFsdWU6IGJvb2xlYW4gfTtcblxuICAvKipcbiAgICogICB7ZnVuY3Rpb259IG9uRXJyb3IgICBDYWxsYmFjayBtZXRob2QsIHRyaWdnZXJlZFxuICB3aGVuIGFuIGVycm9yIG9jY3Vyc1xuICAgKi9cbiAgcHVibGljIG9uRXJyb3I6IChlcnJvcjogYW55KSA9PiB2b2lkO1xuICBwdWJsaWMgb25Nb2RlQ2hhbmdlOiAobmV3TW9kZTogSnNvbkVkaXRvck1vZGUsIG9sZE1vZGU6IEpzb25FZGl0b3JNb2RlKSA9PiB2b2lkO1xuICBwdWJsaWMgb25WYWxpZGF0ZTogKGpzb246IE9iamVjdCkgPT4gSUVycm9yW107XG4gIHB1YmxpYyBvblZhbGlkYXRpb25FcnJvcjogKGVycm9yczogb2JqZWN0W10pID0+IHZvaWQ7XG5cbiAgcHVibGljIGVuYWJsZVNvcnQ6IGJvb2xlYW47XG4gIHB1YmxpYyBlbmFibGVUcmFuc2Zvcm06IGJvb2xlYW47XG4gIHB1YmxpYyBlc2NhcGVVbmljb2RlOiBib29sZWFuO1xuICBwdWJsaWMgZXhwYW5kQWxsOiBib29sZWFuO1xuICBwdWJsaWMgc29ydE9iamVjdEtleXM6IGJvb2xlYW47XG4gIHB1YmxpYyBoaXN0b3J5OiBib29sZWFuO1xuICBwdWJsaWMgbW9kZTogSnNvbkVkaXRvck1vZGU7XG4gIHB1YmxpYyBtb2RlczogSnNvbkVkaXRvck1vZGVbXTtcbiAgcHVibGljIG5hbWU6IFN0cmluZztcbiAgcHVibGljIHNjaGVtYTogT2JqZWN0O1xuICBwdWJsaWMgc2VhcmNoOiBib29sZWFuO1xuICBwdWJsaWMgaW5kZW50YXRpb246IE51bWJlcjtcbiAgcHVibGljIHRlbXBsYXRlOiBPYmplY3Q7XG4gIHB1YmxpYyB0aGVtZTogTnVtYmVyO1xuICBwdWJsaWMgbGFuZ3VhZ2U6IFN0cmluZztcbiAgcHVibGljIGxhbmd1YWdlczogT2JqZWN0O1xuXG4gIC8qKlxuICAgKiBBZGRzIG1haW4gbWVudSBiYXIgLSBDb250YWlucyBmb3JtYXQsIHNvcnQsIHRyYW5zZm9ybSwgc2VhcmNoIGV0Yy4gZnVuY3Rpb25hbGl0eS4gVHJ1ZVxuICAgKiBieSBkZWZhdWx0LiBBcHBsaWNhYmxlIGluIGFsbCB0eXBlcyBvZiBtb2RlLlxuICAgKi9cbiAgcHVibGljIG1haW5NZW51QmFyOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBZGRzIG5hdmlnYXRpb24gYmFyIHRvIHRoZSBtZW51IC0gdGhlIG5hdmlnYXRpb24gYmFyIHZpc3VhbGl6ZSB0aGUgY3VycmVudCBwb3NpdGlvbiBvblxuICAgKiB0aGUgdHJlZSBzdHJ1Y3R1cmUgYXMgd2VsbCBhcyBhbGxvd3MgYnJlYWRjcnVtYnMgbmF2aWdhdGlvbi5cbiAgICogVHJ1ZSBieSBkZWZhdWx0LlxuICAgKiBPbmx5IGFwcGxpY2FibGUgd2hlbiBtb2RlIGlzICd0cmVlJywgJ2Zvcm0nIG9yICd2aWV3Jy5cbiAgICovXG4gIHB1YmxpYyBuYXZpZ2F0aW9uQmFyOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBZGRzIHN0YXR1cyBiYXIgdG8gdGhlIGJvdHRvbSBvZiB0aGUgZWRpdG9yIC0gdGhlIHN0YXR1cyBiYXIgc2hvd3MgdGhlIGN1cnNvciBwb3NpdGlvblxuICAgKiBhbmQgYSBjb3VudCBvZiB0aGUgc2VsZWN0ZWQgY2hhcmFjdGVycy5cbiAgICogVHJ1ZSBieSBkZWZhdWx0LlxuICAgKiBPbmx5IGFwcGxpY2FibGUgd2hlbiBtb2RlIGlzICdjb2RlJyBvciAndGV4dCcuXG4gICAqL1xuICBwdWJsaWMgc3RhdHVzQmFyOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZW5hYmxlU29ydCA9IHRydWU7XG4gICAgdGhpcy5lbmFibGVUcmFuc2Zvcm0gPSB0cnVlO1xuICAgIHRoaXMuZXNjYXBlVW5pY29kZSA9IGZhbHNlO1xuICAgIHRoaXMuZXhwYW5kQWxsID0gZmFsc2U7XG4gICAgdGhpcy5zb3J0T2JqZWN0S2V5cyA9IGZhbHNlO1xuICAgIHRoaXMuaGlzdG9yeSA9IHRydWU7XG4gICAgdGhpcy5tb2RlID0gJ3RyZWUnO1xuICAgIHRoaXMuc2VhcmNoID0gdHJ1ZTtcbiAgICB0aGlzLmluZGVudGF0aW9uID0gMjtcbiAgfVxufVxuIl19